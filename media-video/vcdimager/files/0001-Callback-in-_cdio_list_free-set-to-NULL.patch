From abdce73dbedecdb0035132a3be010f34626b5f0b Mon Sep 17 00:00:00 2001
From: "Luke A. Guest" <laguest@archeia.com>
Date: Wed, 3 Jan 2018 18:12:09 +0000
Subject: [PATCH 1/3] Callback in _cdio_list_free set to NULL.

---
 frontends/cli/vcd-info.c      |  4 ++--
 frontends/xml/vcd_xml_build.c |  4 ++--
 frontends/xml/vcd_xml_rip.c   |  6 +++---
 frontends/xml/vcdxml.h        | 14 +++++++-------
 lib/data_structures.c         |  4 ++--
 lib/files.c                   |  4 ++--
 lib/info.c                    | 10 +++++-----
 lib/info_private.c            |  2 +-
 lib/mpeg_stream.c             |  2 +-
 lib/pbc.c                     |  6 +++---
 lib/vcd.c                     | 10 +++++-----
 11 files changed, 33 insertions(+), 33 deletions(-)

diff --git a/frontends/cli/vcd-info.c b/frontends/cli/vcd-info.c
index 1dc9ec5..5c2845a 100644
--- a/frontends/cli/vcd-info.c
+++ b/frontends/cli/vcd-info.c
@@ -971,7 +971,7 @@ _dump_fs_recurse (const vcdinfo_obj_t *obj, const char pathname[])
 
     }
 
-  _cdio_list_free (entlist, true);
+  _cdio_list_free (entlist, true, NULL);
 
   fprintf (stdout, "\n");
 
@@ -984,7 +984,7 @@ _dump_fs_recurse (const vcdinfo_obj_t *obj, const char pathname[])
       _dump_fs_recurse (obj, _fullname);
     }
 
-  _cdio_list_free (dirlist, true);
+  _cdio_list_free (dirlist, true, NULL);
 }
 
 static void
diff --git a/frontends/xml/vcd_xml_build.c b/frontends/xml/vcd_xml_build.c
index ef316ae..1c7f218 100644
--- a/frontends/xml/vcd_xml_build.c
+++ b/frontends/xml/vcd_xml_build.c
@@ -499,10 +499,10 @@ main (int argc, const char *argv[])
 
   xmlFreeDoc (vcd_doc);
   free(gl.xml_fname);
-  _cdio_list_free (gl.img_options, true);
+  _cdio_list_free (gl.img_options, true, NULL);
   return EXIT_SUCCESS;
  err_exit: 
   free(gl.xml_fname);
-  _cdio_list_free (gl.img_options, true);
+  _cdio_list_free (gl.img_options, true, NULL);
   return EXIT_FAILURE;
 }
diff --git a/frontends/xml/vcd_xml_rip.c b/frontends/xml/vcd_xml_rip.c
index f1be95d..76cd315 100644
--- a/frontends/xml/vcd_xml_rip.c
+++ b/frontends/xml/vcd_xml_rip.c
@@ -184,7 +184,7 @@ _parse_isofs_r (vcdxml_t *p_vcdxml, CdIo_t *p_cdio,
       }
     }
 
-  _cdio_list_free (entlist, true);
+  _cdio_list_free (entlist, true, NULL);
 
   return 0;
 }
@@ -837,7 +837,7 @@ _parse_pbc (vcdxml_t *p_vcdxml, CdIo_t *p_cdio, bool no_ext_psd)
   
   if (cdio_read_mode2_sectors (p_cdio, _pbc_ctx.lot, _lot_vcd_sector, false, 
 			       LOT_VCD_SIZE)) {
-    _cdio_list_free (_pbc_ctx.offset_list, true);
+    _cdio_list_free (_pbc_ctx.offset_list, true, NULL);
     free(_pbc_ctx.lot);
     return -1;
   }
@@ -871,7 +871,7 @@ _parse_pbc (vcdxml_t *p_vcdxml, CdIo_t *p_cdio, bool no_ext_psd)
     }
 
  free_and_return:
-  _cdio_list_free (_pbc_ctx.offset_list, true);
+  _cdio_list_free (_pbc_ctx.offset_list, true, NULL);
   free(_pbc_ctx.lot);
   free(_pbc_ctx.psd);
   return 0;
diff --git a/frontends/xml/vcdxml.h b/frontends/xml/vcdxml.h
index 9401eab..f408f09 100644
--- a/frontends/xml/vcdxml.h
+++ b/frontends/xml/vcdxml.h
@@ -151,8 +151,8 @@ vcd_xml_destroy (vcdxml_t *p_vcdxml)
 
   vcd_assert (p_vcdxml != NULL);
 
-  _cdio_list_free (p_vcdxml->option_list,   true);
-  _cdio_list_free (p_vcdxml->segment_list,  true);
+  _cdio_list_free (p_vcdxml->option_list,   true, NULL);
+  _cdio_list_free (p_vcdxml->segment_list,  true, NULL);
 
   _CDIO_LIST_FOREACH (p_node, p_vcdxml->pbc_list)
     {
@@ -172,8 +172,8 @@ vcd_xml_destroy (vcdxml_t *p_vcdxml)
 	  struct entry_point_t *p_entry = _cdio_list_node_data(p_node2);
 	  free(p_entry->id);
 	}
-      _cdio_list_free (p_sequence->entry_point_list, true);
-      _cdio_list_free (p_sequence->autopause_list, true);
+      _cdio_list_free (p_sequence->entry_point_list, true, NULL);
+      _cdio_list_free (p_sequence->autopause_list, true, NULL);
     }
   
   _CDIO_LIST_FOREACH (p_node, p_vcdxml->filesystem)
@@ -183,9 +183,9 @@ vcd_xml_destroy (vcdxml_t *p_vcdxml)
       free(p_fs->file_src);
     }
 
-  _cdio_list_free (p_vcdxml->filesystem,    true);
-  _cdio_list_free (p_vcdxml->pbc_list, true);
-  _cdio_list_free (p_vcdxml->sequence_list, true);
+  _cdio_list_free (p_vcdxml->filesystem,    true, NULL);
+  _cdio_list_free (p_vcdxml->pbc_list, true, NULL);
+  _cdio_list_free (p_vcdxml->sequence_list, true, NULL);
   free (p_vcdxml->comment);
   free (p_vcdxml->info.album_id);
   free (p_vcdxml->pvd.volume_id);
diff --git a/lib/data_structures.c b/lib/data_structures.c
index cef7381..7e4d89d 100644
--- a/lib/data_structures.c
+++ b/lib/data_structures.c
@@ -180,7 +180,7 @@ _vcd_tree_node_destroy (VcdTreeNode_t *p_node, bool free_data)
   if (p_node->children)
     {
       vcd_assert (_cdio_list_length (p_node->children) == 0);
-      _cdio_list_free (p_node->children, true);
+      _cdio_list_free (p_node->children, true, NULL);
       p_node->children = NULL;
     }
 
@@ -312,7 +312,7 @@ _vcd_tree_node_traverse_bf (VcdTreeNode_t *p_node,
         }
     }
 
-  _cdio_list_free (queue, false);
+  _cdio_list_free (queue, false, NULL);
 }
 
 VcdTreeNode_t *_vcd_tree_node_parent (VcdTreeNode_t *p_node)
diff --git a/lib/files.c b/lib/files.c
index 61e8077..cc471ae 100644
--- a/lib/files.c
+++ b/lib/files.c
@@ -712,7 +712,7 @@ _make_track_scantable (const VcdObj_t *p_vcdobj)
 
   }
 
-  _cdio_list_free (p_all_aps, true);
+  _cdio_list_free (p_all_aps, true, NULL);
 
   vcd_assert (scanpoints == _cdio_list_length (p_scantable));
 
@@ -754,7 +754,7 @@ set_search_dat (VcdObj_t *p_vcdobj, void *buf)
 
   vcd_assert (n = _get_scanpoint_count (p_vcdobj));
 
-  _cdio_list_free (p_scantable, true);
+  _cdio_list_free (p_scantable, true, NULL);
 }
 
 static uint32_t 
diff --git a/lib/info.c b/lib/info.c
index ca636c7..ba64a33 100644
--- a/lib/info.c
+++ b/lib/info.c
@@ -141,7 +141,7 @@ _init_segments (vcdinfo_obj_t *p_obj)
     vcd_warn ("Number of segments found %d is not number of segments %d", 
               i, num_segments);
 
-  _cdio_list_free (entlist, true);
+  _cdio_list_free (entlist, true, NULL);
 
   
 #if 0
@@ -1747,10 +1747,10 @@ vcdinfo_visit_lot (vcdinfo_obj_t *p_obj, bool extended)
 
   ret = vcdinf_visit_lot(&pbc_ctx);
   if (NULL != p_obj->offset_x_list) 
-    _cdio_list_free(p_obj->offset_x_list, true);
+    _cdio_list_free(p_obj->offset_x_list, true, NULL);
   p_obj->offset_x_list = pbc_ctx.offset_x_list;
   if (NULL != p_obj->offset_list) 
-    _cdio_list_free(p_obj->offset_list, true);
+    _cdio_list_free(p_obj->offset_list, true, NULL);
   p_obj->offset_list = pbc_ctx.offset_list;
   return ret;
 }
@@ -2081,9 +2081,9 @@ vcdinfo_close(vcdinfo_obj_t *p_obj)
 {
   if (p_obj != NULL) {
     if (p_obj->offset_list != NULL) 
-      _cdio_list_free(p_obj->offset_list, true);
+      _cdio_list_free(p_obj->offset_list, true, NULL);
     if (p_obj->offset_x_list != NULL) 
-      _cdio_list_free(p_obj->offset_x_list, true);
+      _cdio_list_free(p_obj->offset_x_list, true, NULL);
     free(p_obj->seg_sizes);
     free(p_obj->lot);
     free(p_obj->lot_x);
diff --git a/lib/info_private.c b/lib/info_private.c
index 53edff7..44e1e0e 100644
--- a/lib/info_private.c
+++ b/lib/info_private.c
@@ -110,7 +110,7 @@ vcdinf_update_offset_list(struct _vcdinf_pbc_ctx *obj, bool extended)
           if (last_lid > max_seen_lid) max_seen_lid=last_lid;
         }
       }
-    _cdio_list_free(unused_lids, true);
+    _cdio_list_free(unused_lids, true, NULL);
   }
 }
 
diff --git a/lib/mpeg_stream.c b/lib/mpeg_stream.c
index 2ee3f41..5a5eccd 100644
--- a/lib/mpeg_stream.c
+++ b/lib/mpeg_stream.c
@@ -84,7 +84,7 @@ vcd_mpeg_source_destroy (VcdMpegSource_t *obj, bool destroy_file_obj)
 
   for (i = 0; i < 3; i++)
     if (obj->info.shdr[i].aps_list)
-      _cdio_list_free (obj->info.shdr[i].aps_list, true);
+      _cdio_list_free (obj->info.shdr[i].aps_list, true, NULL);
 
   free (obj);
 }
diff --git a/lib/pbc.c b/lib/pbc.c
index f40d4a2..890d3cb 100644
--- a/lib/pbc.c
+++ b/lib/pbc.c
@@ -848,12 +848,12 @@ vcd_pbc_destroy (pbc_t *p_pbc)
   switch (p_pbc->type)
     {
     case PBC_PLAYLIST:
-      _cdio_list_free (p_pbc->item_id_list, false);
+      _cdio_list_free (p_pbc->item_id_list, false, NULL);
       break;
 
     case PBC_SELECTION:
-      _cdio_list_free (p_pbc->select_id_list, true);
-      _cdio_list_free (p_pbc->select_area_list, true);
+      _cdio_list_free (p_pbc->select_id_list, true, NULL);
+      _cdio_list_free (p_pbc->select_area_list, true, NULL);
       break;
       
     case PBC_END:
diff --git a/lib/vcd.c b/lib/vcd.c
index b1545a0..b1ffea6 100644
--- a/lib/vcd.c
+++ b/lib/vcd.c
@@ -708,13 +708,13 @@ vcd_obj_destroy (VcdObj_t *p_obj)
       free (p->iso_pathname);
     }
 
-  _cdio_list_free (p_obj->custom_file_list, true);
+  _cdio_list_free (p_obj->custom_file_list, true, NULL);
 
-  _cdio_list_free (p_obj->custom_dir_list, true);
+  _cdio_list_free (p_obj->custom_dir_list, true, NULL);
 
   while (_cdio_list_length (p_obj->mpeg_sequence_list))
     _vcd_obj_remove_mpeg_track (p_obj, 0);
-  _cdio_list_free (p_obj->mpeg_sequence_list, true);
+  _cdio_list_free (p_obj->mpeg_sequence_list, true, NULL);
 
   free (p_obj);
 }
@@ -2248,7 +2248,7 @@ vcd_obj_end_output (VcdObj_t *p_obj)
   _vcd_salloc_destroy (p_obj->iso_bitmap);
 
   _dict_clean (p_obj);
-  _cdio_list_free (p_obj->buffer_dict_list, true);
+  _cdio_list_free (p_obj->buffer_dict_list, true, NULL);
 }
 
 int
@@ -2348,7 +2348,7 @@ vcd_obj_write_image (VcdObj_t *p_obj, VcdImageSink_t *p_image_sink,
 
     vcd_image_sink_set_cuesheet (p_image_sink, p_cue_list);
 
-    _cdio_list_free (p_cue_list, true);
+    _cdio_list_free (p_cue_list, true, NULL);
   }
 
   /* and now for the pay load */
-- 
2.15.1

